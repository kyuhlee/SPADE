# SPADE - Support for Provenance Auditing in Distributed Environments.
# Copyright (C) 2015 SRI International.

MODULES_SRC = src/spade/reporter/audit/kernel-modules
MODULES_BIN = lib/kernel-modules
FIND_CMD_SRC_FILES_FLAGS = ! -name 'README' ! -name 'Makefile' ! -name 'netio.c' ! -name 'netio_controller.c' ! -name 'globals.h' ! -name 'build.h'

obj-m += netio.o netio_controller.o

ccflags-y := -DRETPOLINE

all:
# remove the existing built modules (if any)
	@rm -rf $(MODULES_BIN)
# make the bin directory for the module
	@mkdir -p $(MODULES_BIN)
# create hash of source files. Current source files: netio.c, netio_controller.c, globals.h
	$(eval module_src_hash=$(shell cat $(PWD)/$(MODULES_SRC)/netio.c $(PWD)/$(MODULES_SRC)/netio_controller.c $(PWD)/$(MODULES_SRC)/globals.h | sha256sum | cut -d ' ' -f 1))
# create build.h with hash
	$(shell echo "/* AUTOGENERATED. DON'T MODIFY MANUALLY */" > $(PWD)/$(MODULES_SRC)/build.h)
	$(shell echo '#define BUILD_HASH "'$(module_src_hash)'"' >> $(PWD)/$(MODULES_SRC)/build.h)
# build the module
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/src/spade/reporter/audit/kernel-modules modules
# move are the files except the ones mentioned in FIND_CMD_SRC_FILES_FLAGS
	@find $(MODULES_SRC) -mindepth 1 -prune $(FIND_CMD_SRC_FILES_FLAGS) -exec mv -t $(MODULES_BIN) {} \;

clean:
# remove existing source files
	@find $(MODULES_SRC) -mindepth 1 -prune $(FIND_CMD_SRC_FILES_FLAGS) -exec rm -rf {} \;
# remove bin folder
	@rm -rf $(MODULES_BIN)
